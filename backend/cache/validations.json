{
  "version": "3.2",
  "log": [
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:9",
        "version": {
          "withMetadata": "6a5aa0b45857b5e7eddd5ff8bc8cd5e5a63a9acacfc4dbf9f9aad640b1dd4a56",
          "withoutMetadata": "1b56fa366b1a034a128ddcef526e188de54ca7c629da25115f81245da745cb09",
          "linkedWithoutMetadata": "1b56fa366b1a034a128ddcef526e188de54ca7c629da25115f81245da745cb09"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters",
          "console"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:55"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)671_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:39"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)687_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:40"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:46"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)687_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)671_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)687_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "coreTeamCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ShortStay)671_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1566_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1566_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1566_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "59f92ec65bbd88d02912ba405296a5a7c26c1fb880faee84220511dd2afb019c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:9",
        "version": {
          "withMetadata": "8dd2ce0286eba3040d7cd9228fbe151f3fa9db800bc842ccfdbf19bc8fe6bee2",
          "withoutMetadata": "d631d07e0db852419bc1dc18155df67231d0e72464492c2510018f69891a8e49",
          "linkedWithoutMetadata": "d631d07e0db852419bc1dc18155df67231d0e72464492c2510018f69891a8e49"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters",
          "console"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:55"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:45"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)671_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:39"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)687_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:40"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:46"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:47"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)687_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)671_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)687_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "coreTeamCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ShortStay)671_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1556_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1556_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1556_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "59f92ec65bbd88d02912ba405296a5a7c26c1fb880faee84220511dd2afb019c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:9",
        "version": {
          "withMetadata": "36907f422eac596797387aa0d38cf371b4ee2a7c87098fef62ab4ae5df537b9f",
          "withoutMetadata": "9d0e1b82bb30f3d33dae27a6e054efb1fb9eccc53ee1fdd07931055741180a2c",
          "linkedWithoutMetadata": "9d0e1b82bb30f3d33dae27a6e054efb1fb9eccc53ee1fdd07931055741180a2c"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters",
          "console"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)671_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)671_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)685_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)671_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1541_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1541_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1541_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "59f92ec65bbd88d02912ba405296a5a7c26c1fb880faee84220511dd2afb019c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:9",
        "version": {
          "withMetadata": "f5e62b4d2dbad07671ceb5b162300331d76c25ba068abb1682ac7c2b4ff8cb89",
          "withoutMetadata": "1bc5a5d4b29a00a2ad286cfad34c986ffc3ba6bab10a6247dda38207bdc9c8a8",
          "linkedWithoutMetadata": "1bc5a5d4b29a00a2ad286cfad34c986ffc3ba6bab10a6247dda38207bdc9c8a8"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters",
          "console"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)671_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)671_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)685_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)671_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1539_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1539_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1539_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "59f92ec65bbd88d02912ba405296a5a7c26c1fb880faee84220511dd2afb019c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:9",
        "version": {
          "withMetadata": "6b23ad3f0d886098f8a2f77d979f7c21898d4e8e8c364f6408c2a53b637ac0bc",
          "withoutMetadata": "00e79ef342b2c01d70dcde6505b2d4ffcd50ed13d3205e5a0d6e4928947f2094",
          "linkedWithoutMetadata": "00e79ef342b2c01d70dcde6505b2d4ffcd50ed13d3205e5a0d6e4928947f2094"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters",
          "console"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)671_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)671_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)685_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)671_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1537_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1537_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1537_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "59f92ec65bbd88d02912ba405296a5a7c26c1fb880faee84220511dd2afb019c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:9",
        "version": {
          "withMetadata": "123e92302fe8f8a90dffc4832529ce99064e29488dcf1c892cfe04e3ae3157b6",
          "withoutMetadata": "8161d1b60cb61601ee45809896eee1bee42e9fbc7fb205a1685348549ba13d43",
          "linkedWithoutMetadata": "8161d1b60cb61601ee45809896eee1bee42e9fbc7fb205a1685348549ba13d43"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters",
          "console"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)671_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)671_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)685_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)671_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1545_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1545_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1545_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "59f92ec65bbd88d02912ba405296a5a7c26c1fb880faee84220511dd2afb019c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:9",
        "version": {
          "withMetadata": "c52ce05ed70d111da4fcf8be9b8ff3e26707695ff6784bc1550c2250a4ab2117",
          "withoutMetadata": "f0fdc251781ee8f37d0de879b13dc9733b40e89ec939c8f501ab63d32d97f62c",
          "linkedWithoutMetadata": "f0fdc251781ee8f37d0de879b13dc9733b40e89ec939c8f501ab63d32d97f62c"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters",
          "console"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)671_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)671_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)685_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)671_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1543_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1543_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1543_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "59f92ec65bbd88d02912ba405296a5a7c26c1fb880faee84220511dd2afb019c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:9",
        "version": {
          "withMetadata": "e5a1a50341f7bc9b5c726c70de75124dc7489d074d8b5c046885288b185a08a7",
          "withoutMetadata": "7409a8447c0bf6507b8628f47a47681cb17c14d5ecfdbe99ec4c9e4e9addfd19",
          "linkedWithoutMetadata": "7409a8447c0bf6507b8628f47a47681cb17c14d5ecfdbe99ec4c9e4e9addfd19"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters",
          "console"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)671_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)685_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)671_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)685_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)671_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1535_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1535_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1535_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "59f92ec65bbd88d02912ba405296a5a7c26c1fb880faee84220511dd2afb019c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:8",
        "version": {
          "withMetadata": "0e76bd93baf7dc64a382cd6307a086460b330132df742678f3ad2c0b6218950a",
          "withoutMetadata": "9e79b30eef3120ee0615183f8ad9b1aa44102f8f178589fe906e2f1dfba4659e",
          "linkedWithoutMetadata": "9e79b30eef3120ee0615183f8ad9b1aa44102f8f178589fe906e2f1dfba4659e"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)670_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:37"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:40"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)670_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)684_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)670_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1524_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1524_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1524_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:8",
        "version": {
          "withMetadata": "083433ef82fb110495c33132744288daac1c4713d0b2eec8599f469c08b4505a",
          "withoutMetadata": "bb5499243d53e8ec6331f163a76247846365621ceb2825343f39d0ddda0d4f97",
          "linkedWithoutMetadata": "bb5499243d53e8ec6331f163a76247846365621ceb2825343f39d0ddda0d4f97"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:53"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numOfCoreTeam",
            "src": "contracts/NomadicVault.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)670_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:37"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:40"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "numOfCoreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)670_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)684_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)670_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1524_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1524_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1524_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:8",
        "version": {
          "withMetadata": "564eaac988a84da9667c235b42cb7bd413580f43e008dca008ba08ca881dcbc5",
          "withoutMetadata": "b2aa61d343a686aaf839eaa382fe4de4edd3cb972a2479bdd49d35faf16a490f",
          "linkedWithoutMetadata": "b2aa61d343a686aaf839eaa382fe4de4edd3cb972a2479bdd49d35faf16a490f"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)670_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:37"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:40"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)670_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)684_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)670_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1516_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1516_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1516_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:8",
        "version": {
          "withMetadata": "38e9b0d915e1a4cadaf9c5bf5056986a9042d246e29a98c7dcc380f0dfd57fb2",
          "withoutMetadata": "cd31248b4eb3e0da154cc3a2cc431b5b9d0065e14f4bb75e7ffeb98944555766",
          "linkedWithoutMetadata": "cd31248b4eb3e0da154cc3a2cc431b5b9d0065e14f4bb75e7ffeb98944555766"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDAO(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)670_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:37"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:40"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)670_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)684_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)670_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1515_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1515_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1515_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:8",
        "version": {
          "withMetadata": "396703b9843f2d2b5d0eefbd156a82232316b8fe180894d9520cd3871a2ad875",
          "withoutMetadata": "17412e5f4253d0b6acd37553dc0c1d8813b16883566f1072cdf95e924f67786c",
          "linkedWithoutMetadata": "17412e5f4253d0b6acd37553dc0c1d8813b16883566f1072cdf95e924f67786c"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDao(string,string,uint256)",
          "getActiveDAOs()",
          "getFormingDAOs()",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)670_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:37"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:40"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)670_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)684_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)670_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1515_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1515_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1515_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "df1a96e4c123a1a7d27f99985ea4e853682ce15dc401c751023f00367d489c34",
          "withoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87",
          "linkedWithoutMetadata": "b5a67377146f452eaaa03e085a7271fdf53aa04b9be07312dd2f5007522dcb87"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)",
          "applyForMembership()",
          "fetchAllApplicants()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "userId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:16"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(User)431_storage)",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:17"
            },
            {
              "label": "userAddresses",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(User)431_storage)": {
              "label": "mapping(address => struct HackerHouseDAO.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(User)431_storage": {
              "label": "struct HackerHouseDAO.User",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "userAddr",
                  "type": "t_address",
                  "offset": 1,
                  "slot": "1"
                },
                {
                  "label": "isMember",
                  "type": "t_bool",
                  "offset": 21,
                  "slot": "1"
                },
                {
                  "label": "approvers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:8",
        "version": {
          "withMetadata": "cbd41f5947ae690a07f99ce9b3a1f180b91577f56cb45cd25c64d68ef5f9925c",
          "withoutMetadata": "d77d5a1f00873a865e6699009d4998df26db63c5e1de15a819d72310403412bc",
          "linkedWithoutMetadata": "d77d5a1f00873a865e6699009d4998df26db63c5e1de15a819d72310403412bc"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDao(string,string,uint256)",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)670_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:37"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:40"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)684_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)670_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)684_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)670_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1346_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1346_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1346_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "HackerHouseDAO": {
        "src": "contracts/HackerHouseDAO.sol:6",
        "version": {
          "withMetadata": "613f8c262d080c0c9cda96302e918d04f65895e05bf0e3a518fa396238864213",
          "withoutMetadata": "9aef3d4cf7ea378793706eae32f124b122327fe6da092f8e1438961a841aa045",
          "linkedWithoutMetadata": "9aef3d4cf7ea378793706eae32f124b122327fe6da092f8e1438961a841aa045"
        },
        "inherit": [],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "initialize(address,uint256,address[],string,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/HackerHouseDAO.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "parentAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:9"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:10"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:11"
            },
            {
              "label": "descriptionURI",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:12"
            },
            {
              "label": "coreTeam",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:13"
            },
            {
              "label": "membershipPrice",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:14"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "HackerHouseDAO",
              "src": "contracts/HackerHouseDAO.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:8",
        "version": {
          "withMetadata": "aa7098184f9130c0b66961804c1c0129b7c05a22c10826d848e2e4ddb3a5c790",
          "withoutMetadata": "d77d5a1f00873a865e6699009d4998df26db63c5e1de15a819d72310403412bc",
          "linkedWithoutMetadata": "d77d5a1f00873a865e6699009d4998df26db63c5e1de15a819d72310403412bc"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()",
          "proposeDao(string,string,uint256)",
          "joinCoreTeam(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:52"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)502_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:37"
            },
            {
              "label": "hhouses",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(HackerHouse)516_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:38"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:40"
            },
            {
              "label": "hhTemplate",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:41"
            },
            {
              "label": "hhAddresses",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:42"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "5",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:43"
            },
            {
              "label": "daoId",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(HackerHouse)516_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.HackerHouse)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)502_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(HackerHouse)516_storage": {
              "label": "struct NomadicVault.HackerHouse",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "coreTeam",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(ShortStay)502_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)1178_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)1178_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)1178_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b35fba2ee6479f0ec36ad880500874423e65c0eb3c0bb1fada1e750a802da78d",
          "withoutMetadata": "38634e864a2963beb8b66fed05b47823757e57f102fa1d97815f4e8be2405c5a",
          "linkedWithoutMetadata": "38634e864a2963beb8b66fed05b47823757e57f102fa1d97815f4e8be2405c5a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DummyToken": {
        "src": "contracts/DummyToken.sol:7",
        "version": {
          "withMetadata": "76759ba41383f0b157e4bc013315390d9e0251cad7f2f1492a2990e8bb8d85da",
          "withoutMetadata": "a25719c6642c31e649e11fc2402abde82ddf442ce5eed12ff5bec4bdb611a2d2",
          "linkedWithoutMetadata": "a25719c6642c31e649e11fc2402abde82ddf442ce5eed12ff5bec4bdb611a2d2"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setPriceFeed(address)",
          "getPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyToken",
            "src": "contracts/DummyToken.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "owner",
            "src": "contracts/DummyToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DummyToken",
              "src": "contracts/DummyToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AggregatorV3Interface": {
        "src": "contracts/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MockChainlinkOracleFeed": {
        "src": "contracts/mock/MockChainlinkOracleFeed.sol:6",
        "version": {
          "withMetadata": "40e06de4ad48f84ddcc02fa729e8e131a9ca2fbfa3c0afa535ec69d271bca346",
          "withoutMetadata": "8fc8a025568ab8db808b99420de5a2ecb306b5163ff319ce77d0dc136f1e1f01",
          "linkedWithoutMetadata": "8fc8a025568ab8db808b99420de5a2ecb306b5163ff319ce77d0dc136f1e1f01"
        },
        "inherit": [
          "AggregatorV3Interface"
        ],
        "libraries": [],
        "methods": [
          "(int256,uint8)",
          "decimals()",
          "description()",
          "version()",
          "setPrice(int256)",
          "setDecimals(uint8)",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockChainlinkOracleFeed",
            "src": "contracts/mock/MockChainlinkOracleFeed.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "MockChainlinkOracleFeed",
              "src": "contracts/mock/MockChainlinkOracleFeed.sol:7"
            },
            {
              "label": "numDecimals",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "MockChainlinkOracleFeed",
              "src": "contracts/mock/MockChainlinkOracleFeed.sol:8"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "KeeperBase": {
        "src": "@chainlink/contracts/src/v0.8/KeeperBase.sol:4",
        "version": {
          "withMetadata": "706ab9b378a66d6014873a4ff72b96ec88d933ab0f508457a6834736247c9de9",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "KeeperCompatible": {
        "src": "@chainlink/contracts/src/v0.8/KeeperCompatible.sol:7",
        "inherit": [
          "KeeperCompatibleInterface",
          "KeeperBase"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "KeeperCompatibleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NomadicKeeper": {
        "src": "contracts/NomadicKeeper.sol:6",
        "version": {
          "withMetadata": "65f29c3316b8aaa0776bcc69bc57aade8a702dfa7ab4f08030c99c5d9992d450",
          "withoutMetadata": "2f527048a256c2190082822603321222cb5736b6265680cfb973d9e017d470e4",
          "linkedWithoutMetadata": "2f527048a256c2190082822603321222cb5736b6265680cfb973d9e017d470e4"
        },
        "inherit": [
          "KeeperCompatibleInterface"
        ],
        "libraries": [],
        "methods": [
          "(bytes32,address)",
          "setConfig(bytes32)",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicKeeper",
            "src": "contracts/NomadicKeeper.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "lastRunDay",
            "src": "contracts/NomadicKeeper.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "vault",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:9"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:10"
            },
            {
              "label": "lastRunDay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:11"
            },
            {
              "label": "config",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "UserRegistry": {
        "src": "contracts/UserRegistry.sol:3",
        "version": {
          "withMetadata": "d40b294f1ead8167d740ca911c5cde219095703686d89e02d99609a1e16c774e",
          "withoutMetadata": "b30a93cef89e5d27b17fc06b7db26c93013a621b0a8cef54a656705eb596ca60",
          "linkedWithoutMetadata": "b30a93cef89e5d27b17fc06b7db26c93013a621b0a8cef54a656705eb596ca60"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getUserByAddress()",
          "modifyUser(string,string,uint256)",
          "getRandom()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UserRegistry",
            "src": "contracts/UserRegistry.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "owner",
            "src": "contracts/UserRegistry.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "userCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "UserRegistry",
              "src": "contracts/UserRegistry.sol:4"
            },
            {
              "label": "userByAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(User)14_storage)",
              "contract": "UserRegistry",
              "src": "contracts/UserRegistry.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(User)14_storage)": {
              "label": "mapping(address => struct UserRegistry.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(User)14_storage": {
              "label": "struct UserRegistry.User",
              "members": [
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "involvementBasis",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b35fba2ee6479f0ec36ad880500874423e65c0eb3c0bb1fada1e750a802da78d",
          "withoutMetadata": "38634e864a2963beb8b66fed05b47823757e57f102fa1d97815f4e8be2405c5a",
          "linkedWithoutMetadata": "38634e864a2963beb8b66fed05b47823757e57f102fa1d97815f4e8be2405c5a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DummyToken": {
        "src": "contracts/DummyToken.sol:7",
        "version": {
          "withMetadata": "76759ba41383f0b157e4bc013315390d9e0251cad7f2f1492a2990e8bb8d85da",
          "withoutMetadata": "a25719c6642c31e649e11fc2402abde82ddf442ce5eed12ff5bec4bdb611a2d2",
          "linkedWithoutMetadata": "a25719c6642c31e649e11fc2402abde82ddf442ce5eed12ff5bec4bdb611a2d2"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setPriceFeed(address)",
          "getPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyToken",
            "src": "contracts/DummyToken.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "owner",
            "src": "contracts/DummyToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DummyToken",
              "src": "contracts/DummyToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AggregatorV3Interface": {
        "src": "contracts/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MockChainlinkOracleFeed": {
        "src": "contracts/mock/MockChainlinkOracleFeed.sol:6",
        "version": {
          "withMetadata": "40e06de4ad48f84ddcc02fa729e8e131a9ca2fbfa3c0afa535ec69d271bca346",
          "withoutMetadata": "8fc8a025568ab8db808b99420de5a2ecb306b5163ff319ce77d0dc136f1e1f01",
          "linkedWithoutMetadata": "8fc8a025568ab8db808b99420de5a2ecb306b5163ff319ce77d0dc136f1e1f01"
        },
        "inherit": [
          "AggregatorV3Interface"
        ],
        "libraries": [],
        "methods": [
          "(int256,uint8)",
          "decimals()",
          "description()",
          "version()",
          "setPrice(int256)",
          "setDecimals(uint8)",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockChainlinkOracleFeed",
            "src": "contracts/mock/MockChainlinkOracleFeed.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "MockChainlinkOracleFeed",
              "src": "contracts/mock/MockChainlinkOracleFeed.sol:7"
            },
            {
              "label": "numDecimals",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "MockChainlinkOracleFeed",
              "src": "contracts/mock/MockChainlinkOracleFeed.sol:8"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "KeeperBase": {
        "src": "@chainlink/contracts/src/v0.8/KeeperBase.sol:4",
        "version": {
          "withMetadata": "706ab9b378a66d6014873a4ff72b96ec88d933ab0f508457a6834736247c9de9",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "KeeperCompatible": {
        "src": "@chainlink/contracts/src/v0.8/KeeperCompatible.sol:7",
        "inherit": [
          "KeeperCompatibleInterface",
          "KeeperBase"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "KeeperCompatibleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NomadicKeeper": {
        "src": "contracts/NomadicKeeper.sol:6",
        "version": {
          "withMetadata": "65f29c3316b8aaa0776bcc69bc57aade8a702dfa7ab4f08030c99c5d9992d450",
          "withoutMetadata": "2f527048a256c2190082822603321222cb5736b6265680cfb973d9e017d470e4",
          "linkedWithoutMetadata": "2f527048a256c2190082822603321222cb5736b6265680cfb973d9e017d470e4"
        },
        "inherit": [
          "KeeperCompatibleInterface"
        ],
        "libraries": [],
        "methods": [
          "(bytes32,address)",
          "setConfig(bytes32)",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicKeeper",
            "src": "contracts/NomadicKeeper.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "lastRunDay",
            "src": "contracts/NomadicKeeper.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "vault",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:9"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:10"
            },
            {
              "label": "lastRunDay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:11"
            },
            {
              "label": "config",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "UserRegistry": {
        "src": "contracts/UserRegistry.sol:3",
        "version": {
          "withMetadata": "d40b294f1ead8167d740ca911c5cde219095703686d89e02d99609a1e16c774e",
          "withoutMetadata": "b30a93cef89e5d27b17fc06b7db26c93013a621b0a8cef54a656705eb596ca60",
          "linkedWithoutMetadata": "b30a93cef89e5d27b17fc06b7db26c93013a621b0a8cef54a656705eb596ca60"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getUserByAddress()",
          "modifyUser(string,string,uint256)",
          "getRandom()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UserRegistry",
            "src": "contracts/UserRegistry.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "owner",
            "src": "contracts/UserRegistry.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "userCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "UserRegistry",
              "src": "contracts/UserRegistry.sol:4"
            },
            {
              "label": "userByAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(User)14_storage)",
              "contract": "UserRegistry",
              "src": "contracts/UserRegistry.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(User)14_storage)": {
              "label": "mapping(address => struct UserRegistry.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(User)14_storage": {
              "label": "struct UserRegistry.User",
              "members": [
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "involvementBasis",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "6358d7652737e83a25bf5fc263c1126d1b768ab8ef883b0b070212b3047ef5c2",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "@openzeppelin/contracts/utils/math/SafeMath.sol:16",
        "version": {
          "withMetadata": "0db76a53041cd1a05babec75dfc03ea844dd92cd1278a69281ee37f6622c28ff",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NomadicVault": {
        "src": "contracts/NomadicVault.sol:7",
        "version": {
          "withMetadata": "97e702a1f2df171aa85adbd0c3128f4f4c350d65ed41ae504df9b3551b56392e",
          "withoutMetadata": "1783710811e011f7da7c2e7298a90be04485161b79ae42550ec56f32085e111f",
          "linkedWithoutMetadata": "1783710811e011f7da7c2e7298a90be04485161b79ae42550ec56f32085e111f"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "()",
          "proposeShortStay(string,uint256,uint256,uint256,bool)",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicVault",
            "src": "contracts/NomadicVault.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "stays",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)424_storage)",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:27"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:28"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicVault",
              "src": "contracts/NomadicVault.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)424_storage)": {
              "label": "mapping(uint256 => struct NomadicVault.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)424_storage": {
              "label": "struct NomadicVault.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NomadicWorldCoin": {
        "src": "contracts/NomadicWorldCoin.sol:9",
        "version": {
          "withMetadata": "5c2c39c2d2d348af396e0c28aa51218b341422e17f5f019214d8dd34e00d97ed",
          "withoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942",
          "linkedWithoutMetadata": "753c35aaaf91e536bbf4884515b1d3544ea7ebb4a19d364f964a1dd7e0d15942"
        },
        "inherit": [],
        "libraries": [
          "ByteHasher",
          "SafeMath",
          "Counters"
        ],
        "methods": [
          "(address)",
          "proposeShortStay(string,uint256,uint256,uint256,bool,uint256,uint256,uint256[8])",
          "joinShortStay(uint256)",
          "getShortStays(uint256[])",
          "checkDeadlines()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicWorldCoin",
            "src": "contracts/NomadicWorldCoin.sol:55"
          },
          {
            "kind": "state-variable-immutable",
            "name": "worldId",
            "src": "contracts/NomadicWorldCoin.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "groupId",
            "src": "contracts/NomadicWorldCoin.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "nullifierHashes",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:27"
            },
            {
              "label": "stays",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(ShortStay)870_storage)",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:48"
            },
            {
              "label": "stayId",
              "offset": 0,
              "slot": "3",
              "type": "t_struct(Counter)5_storage",
              "contract": "NomadicWorldCoin",
              "src": "contracts/NomadicWorldCoin.sol:49"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(ShortStay)870_storage)": {
              "label": "mapping(uint256 => struct NomadicWorldCoin.ShortStay)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)5_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ShortStay)870_storage": {
              "label": "struct NomadicWorldCoin.ShortStay",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "descriptionURI",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trustee",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "nPersons",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slotsReserved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "amountFunded",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "members",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "pricePerPerson",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "deadline",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "isCreatorSlot",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "10"
                },
                {
                  "label": "isFull",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ByteHasher": {
        "src": "contracts/helpers/ByteHasher.sol:4",
        "version": {
          "withMetadata": "8c7e55a67ab948819e01e6782776596b4fb1108cbfca927dfe2933de0dd75725",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWorldID": {
        "src": "contracts/interfaces/IWorldID.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "verifyProof(uint256,uint256,uint256,uint256,uint256,uint256[8])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b35fba2ee6479f0ec36ad880500874423e65c0eb3c0bb1fada1e750a802da78d",
          "withoutMetadata": "38634e864a2963beb8b66fed05b47823757e57f102fa1d97815f4e8be2405c5a",
          "linkedWithoutMetadata": "38634e864a2963beb8b66fed05b47823757e57f102fa1d97815f4e8be2405c5a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DummyToken": {
        "src": "contracts/DummyToken.sol:7",
        "version": {
          "withMetadata": "76759ba41383f0b157e4bc013315390d9e0251cad7f2f1492a2990e8bb8d85da",
          "withoutMetadata": "a25719c6642c31e649e11fc2402abde82ddf442ce5eed12ff5bec4bdb611a2d2",
          "linkedWithoutMetadata": "a25719c6642c31e649e11fc2402abde82ddf442ce5eed12ff5bec4bdb611a2d2"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "setPriceFeed(address)",
          "getPrice()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DummyToken",
            "src": "contracts/DummyToken.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "owner",
            "src": "contracts/DummyToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "priceFeed",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DummyToken",
              "src": "contracts/DummyToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AggregatorV3Interface": {
        "src": "contracts/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "MockChainlinkOracleFeed": {
        "src": "contracts/mock/MockChainlinkOracleFeed.sol:6",
        "version": {
          "withMetadata": "40e06de4ad48f84ddcc02fa729e8e131a9ca2fbfa3c0afa535ec69d271bca346",
          "withoutMetadata": "8fc8a025568ab8db808b99420de5a2ecb306b5163ff319ce77d0dc136f1e1f01",
          "linkedWithoutMetadata": "8fc8a025568ab8db808b99420de5a2ecb306b5163ff319ce77d0dc136f1e1f01"
        },
        "inherit": [
          "AggregatorV3Interface"
        ],
        "libraries": [],
        "methods": [
          "(int256,uint8)",
          "decimals()",
          "description()",
          "version()",
          "setPrice(int256)",
          "setDecimals(uint8)",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockChainlinkOracleFeed",
            "src": "contracts/mock/MockChainlinkOracleFeed.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "price",
              "offset": 0,
              "slot": "0",
              "type": "t_int256",
              "contract": "MockChainlinkOracleFeed",
              "src": "contracts/mock/MockChainlinkOracleFeed.sol:7"
            },
            {
              "label": "numDecimals",
              "offset": 0,
              "slot": "1",
              "type": "t_uint8",
              "contract": "MockChainlinkOracleFeed",
              "src": "contracts/mock/MockChainlinkOracleFeed.sol:8"
            }
          ],
          "types": {
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "KeeperBase": {
        "src": "@chainlink/contracts/src/v0.8/KeeperBase.sol:4",
        "version": {
          "withMetadata": "706ab9b378a66d6014873a4ff72b96ec88d933ab0f508457a6834736247c9de9",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "KeeperCompatible": {
        "src": "@chainlink/contracts/src/v0.8/KeeperCompatible.sol:7",
        "inherit": [
          "KeeperCompatibleInterface",
          "KeeperBase"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "KeeperCompatibleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NomadicKeeper": {
        "src": "contracts/NomadicKeeper.sol:6",
        "version": {
          "withMetadata": "65f29c3316b8aaa0776bcc69bc57aade8a702dfa7ab4f08030c99c5d9992d450",
          "withoutMetadata": "2f527048a256c2190082822603321222cb5736b6265680cfb973d9e017d470e4",
          "linkedWithoutMetadata": "2f527048a256c2190082822603321222cb5736b6265680cfb973d9e017d470e4"
        },
        "inherit": [
          "KeeperCompatibleInterface"
        ],
        "libraries": [],
        "methods": [
          "(bytes32,address)",
          "setConfig(bytes32)",
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NomadicKeeper",
            "src": "contracts/NomadicKeeper.sol:14"
          },
          {
            "kind": "state-variable-assignment",
            "name": "lastRunDay",
            "src": "contracts/NomadicKeeper.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "vault",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:9"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:10"
            },
            {
              "label": "lastRunDay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:11"
            },
            {
              "label": "config",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "NomadicKeeper",
              "src": "contracts/NomadicKeeper.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "UserRegistry": {
        "src": "contracts/UserRegistry.sol:3",
        "version": {
          "withMetadata": "d40b294f1ead8167d740ca911c5cde219095703686d89e02d99609a1e16c774e",
          "withoutMetadata": "b30a93cef89e5d27b17fc06b7db26c93013a621b0a8cef54a656705eb596ca60",
          "linkedWithoutMetadata": "b30a93cef89e5d27b17fc06b7db26c93013a621b0a8cef54a656705eb596ca60"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "getUserByAddress()",
          "modifyUser(string,string,uint256)",
          "getRandom()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UserRegistry",
            "src": "contracts/UserRegistry.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "owner",
            "src": "contracts/UserRegistry.sol:5"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "userCount",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "UserRegistry",
              "src": "contracts/UserRegistry.sol:4"
            },
            {
              "label": "userByAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(User)14_storage)",
              "contract": "UserRegistry",
              "src": "contracts/UserRegistry.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(User)14_storage)": {
              "label": "mapping(address => struct UserRegistry.User)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(User)14_storage": {
              "label": "struct UserRegistry.User",
              "members": [
                {
                  "label": "url",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "involvementBasis",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "imgType",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}